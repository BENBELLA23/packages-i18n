# This file was automatically generated
msgid ""
msgstr ""
"Project-Id-Version: opensuse-i 18n\n"
"POT-Creation-Date: 2019-05-06 14:28+0000\n"
"PO-Revision-Date: 2019-05-14 14:47+0000\n"
"Last-Translator: Yasuhiko Kamata <belphegor@belbel.or.jp>\n"
"Language-Team: Japanese <https://l10n.opensuse.org/projects/packages-i18n/"
"golang-master/ja/>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 3.3\n"

#. leap/golang-github-docker-libnetwork/docker-libnetwork/summary
#. leap/golang-github-docker-libnetwork/summary
#. tumbleweed/golang-github-docker-libnetwork/docker-libnetwork/summary
#. tumbleweed/golang-github-docker-libnetwork-kubic/docker-libnetwork-kubic/summary
#. tumbleweed/golang-github-docker-libnetwork/summary
#. tumbleweed/golang-github-docker-libnetwork-kubic/summary
msgid "Docker Networking"
msgstr "Docker ネットワーキング"

#. leap/golang-github-docker-libnetwork/docker-libnetwork/description
#. tumbleweed/golang-github-docker-libnetwork/docker-libnetwork/description
#. tumbleweed/golang-github-docker-libnetwork-kubic/docker-libnetwork-kubic/description
msgid ""
"The docker-proxy binary used by Docker that provides Docker with libnetwork "
"support."
msgstr ""
"Docker に対して libnetwork サポートを提供する、 Docker で使用される docker-"
"proxy バイナリです。"

#. leap/golang-github-exercism-cli/exercism/summary
#. leap/golang-github-exercism-cli/summary
#. tumbleweed/golang-github-exercism-cli/exercism/summary
#. tumbleweed/golang-github-exercism-cli/summary
msgid "A Go based command line tool for exercism.io"
msgstr "exercism.io 向け Go 言語ベースコマンドラインツール"

#. leap/golang-github-exercism-cli/exercism/description
#. leap/golang-github-exercism-cli/description
#. tumbleweed/golang-github-exercism-cli/exercism/description
#. tumbleweed/golang-github-exercism-cli/description
msgid "The CLI provides a way to do the problems on exercism.io."
msgstr "この CLI は、 exercism.io での問題を処理する方法を提供します。"

#. leap/golang-github-cpuguy83-go-md2man/go-md2man/summary
#. tumbleweed/golang-github-cpuguy83-go-md2man/go-md2man/summary
msgid "Tool to converts markdown into man pages"
msgstr "マークダウンをマニュアルページに変換するツールです"

#. leap/golang-github-cpuguy83-go-md2man/go-md2man/description
#. leap/golang-github-cpuguy83-go-md2man/description
#. tumbleweed/golang-github-cpuguy83-go-md2man/go-md2man/description
#. tumbleweed/golang-github-cpuguy83-go-md2man/description
msgid "Tool to converts markdown into man pages."
msgstr "マークダウンをマニュアルページに変換するツールです。"

#. leap/golang-github-cpuguy83-go-md2man/summary
#. tumbleweed/golang-github-cpuguy83-go-md2man/summary
msgid "Convert markdown into man pages"
msgstr "マークダウンからのマニュアルページへの変換"

#. leap/golang-github-docker-libnetwork/description
#. tumbleweed/golang-github-docker-libnetwork/description
#. tumbleweed/golang-github-docker-libnetwork-kubic/description
msgid ""
"Libnetwork provides a native Go implementation for connecting containers\n"
"\n"
"The goal of libnetwork is to deliver a robust Container Network Model that "
"provides a consistent programming interface and the required network "
"abstractions for applications."
msgstr ""
"libnetwork は、コンテナに接続するためのネイティブな Go 実装を提供します。\n"
"\n"
"libnetwork は、強健なコンテナ型のネットワークモデルに対してデータを配送し、一"
"貫したプログラミングインターフェイスとアプリケーションに必要なネットワーク抽"
"象機能を提供します。"

#. leap/golang-github-golang-glog/summary
#. tumbleweed/golang-github-golang-glog/summary
msgid "Leveled execution logs for Go"
msgstr "Go 言語向けレベル付き実行ログ"

#. leap/golang-github-golang-glog/description
#. tumbleweed/golang-github-golang-glog/description
msgid ""
"This is a pure Go implementation of leveled logs in the manner of the C++ "
"package google-glog."
msgstr ""
"これは、 C++ パッケージ google-glog のやり方を利用した、レベル型ログ機能の純"
"粋 Go 言語実装です。"

#. leap/golang-github-jteeuwen-go-bindata/summary
#. tumbleweed/golang-github-jteeuwen-go-bindata/summary
msgid "A small utility which generates Go code from any file"
msgstr "任意のファイルから Go コードを生成するための小さなユーティリティ"

#. leap/golang-github-jteeuwen-go-bindata/description
#. tumbleweed/golang-github-jteeuwen-go-bindata/description
msgid ""
"This package converts any file into manageable Go source code. Useful for "
"embedding binary data into a go program. The file data is optionally gzip "
"compressed before being converted to a raw byte slice.\n"
"\n"
"It comes with a command line tool in the go-bindata sub directory. This tool "
"offers a set of command line options, used to customize the output being "
"generated."
msgstr ""
"このパッケージは、任意のファイルをマネージャブルな Go ソースコードに変換しま"
"す。 Go プログラミング言語内でバイナリデータを内蔵させたいような場合に便利な"
"仕組みです。必要であれば、ファイルデータをバイト列に変換する際に gzip で圧縮"
"することもできます。\n"
"\n"
"なお、このパッケージには go-bindata サブディレクトリ内に、コマンドラインツー"
"ルも付属しています。このツールには様々なコマンドラインオプションがあります"
"が、これらは生成される出力をカスタマイズするために使用するものです。"

#. leap/golang-github-kr-pty/summary
#. tumbleweed/golang-github-kr-pty/summary
msgid "PTY interface for Go"
msgstr "Go 向け PTY インターフェイス"

#. leap/golang-github-kr-pty/description
#. tumbleweed/golang-github-kr-pty/description
msgid "Pty is a Go package for using unix pseudo-terminals."
msgstr "Pty は Unix の疑似端末を使用するための Go パッケージです。"

#. leap/golang-github-kr-text/summary
#. tumbleweed/golang-github-kr-text/summary
msgid "Miscellaneous functions for formatting text"
msgstr "テキストを整形するための各種関数"

#. leap/golang-github-kr-text/description
#. tumbleweed/golang-github-kr-text/description
msgid "This is a Go package for manipulating paragraphs of text."
msgstr "これはテキストの段落を操作するための Go パッケージです。"

#. leap/golang-github-prometheus-alertmanager/summary
#. tumbleweed/golang-github-prometheus-alertmanager/summary
msgid "Prometheus Alertmanager"
msgstr "Prometheus アラートマネージャ"

#. leap/golang-github-prometheus-alertmanager/description
#. tumbleweed/golang-github-prometheus-alertmanager/description
msgid ""
"The Alertmanager handles alerts sent by client applications such as the "
"Prometheus server. It takes care of deduplicating, grouping, and routing "
"them to the correct receiver integration such as email, PagerDuty, or "
"OpsGenie. It also takes care of silencing and inhibition of alerts."
msgstr ""
"Alertmanager は、 Prometheus サーバなどのクライアントアプリケーションから送信"
"されたアラートを処理します。重複の排除やグループ化のほか、電子メールや "
"PagerDuty, OpsGenie などの正しい発信先に配送するためのルーティング機能も備え"
"ています。このほか、アラートの無効化や制止なども行なうことができます。"

#. leap/golang-github-prometheus-node_exporter/summary
#. tumbleweed/golang-github-prometheus-node_exporter/summary
msgid "Prometheus exporter for machine metrics"
msgstr "マシンメトリック向け Prometheus エクスポータ"

#. leap/golang-github-prometheus-node_exporter/description
#. tumbleweed/golang-github-prometheus-node_exporter/description
msgid ""
"Prometheus exporter for hardware and OS metrics exposed by *NIX kernels, "
"written in Go with pluggable metric collectors."
msgstr ""
"*NIX カーネルで提供されるハードウエアや OS に関する情報を出力する、 "
"Prometheus エクスポータです。プラグイン化されたメトリックコレクタを利用し"
"て、 Go 言語で書かれています。"

#. leap/golang-github-prometheus-prometheus/summary
#. tumbleweed/golang-github-prometheus-prometheus/summary
msgid "The Prometheus monitoring system and time series database"
msgstr "Prometheus モニタリングシステムとタイムシリーズデータベース"

#. leap/golang-github-prometheus-prometheus/description
#. tumbleweed/golang-github-prometheus-prometheus/description
msgid ""
"Prometheus's main features are:  - a multi-dimensional data model (time "
"series identified by metric name and key/value pairs)  - a flexible query "
"language to leverage this dimensionality  - no reliance on distributed "
"storage; single server nodes are autonomous  - time series collection "
"happens via a pull model over HTTP  - pushing time series is supported via "
"an intermediary gateway  - targets are discovered via service discovery or "
"static configuration  - multiple modes of graphing and dashboarding support"
msgstr ""
"Prometheus の主な機能: - 多次元型のデータモデル (メトリック名やキー／値の追加"
"で識別される時間軸情報) - その次元性をさらに活用するための柔軟な問い合わせ言"
"語 - 配布ストレージには依存していない構成; 単一のサーバノードは自律的に動作し"
"ます - 時間軸情報を HTTP 経由で引き出すことのできる機能 - 仲介ゲートウエイを"
"介した時間軸情報のプッシュ - サービス検出もしくは固定の設定でターゲットを検"
"出 - グラフ作成やダッシュボード表示での複数モードに対応"

#. leap/golang-github-prometheus-promu/summary
#. tumbleweed/golang-github-prometheus-promu/summary
msgid "Prometheus Utility Tool"
msgstr "Prometheus ユーティリティツール"

#. leap/golang-github-prometheus-promu/description
#. tumbleweed/golang-github-prometheus-promu/description
msgid ""
"The Prometheus Utility Tool is used by the Prometheus project to build other "
"components."
msgstr ""
"Prometheus ユーティリティツールは Prometheus プロジェクトで使用されるもので、"
"他のコンポーネントを構築する際に利用します。"

#. leap/golang-github-russross-blackfriday/summary
#. tumbleweed/golang-github-russross-blackfriday/summary
msgid "Markdown processor implemented in Go"
msgstr "Go 言語で実装されたマークダウンプロセッサ"

#. leap/golang-github-russross-blackfriday/description
#. tumbleweed/golang-github-russross-blackfriday/description
msgid ""
"Blackfriday is a Markdown processor implemented in Go. It is paranoid about "
"its input (so you can safely feed it user-supplied data), it is fast, it "
"supports common extensions (tables, smart punctuation substitutions, etc.), "
"and it is safe for all utf-8 (unicode) input. HTML output is currently "
"supported, along with Smartypants extensions. An experimental LaTeX output "
"engine is also included."
msgstr ""
"Blackfriday は Go 言語で実装されたマークダウンプロセッサです。入力データに関"
"しては、偏執的とも呼べるほど厳格にチェックを行ないます (そのため、ユーザが入"
"力したデータをそのまま与えることが可能です) が、高速で汎用的な拡張 (テーブ"
"ル、句読点に対する賢い置換機能など) にも対応しています。また、全ての UTF-8 "
"(Unicode) 入力に対して安全です。 Smartypants 拡張とともに HTML 出力にも対応し"
"ています。実験的な LaTeX 出力エンジンも含まれています。"

#. leap/golang-github-shurcool-sanitized_anchor_name/summary
#. tumbleweed/golang-github-shurcool-sanitized_anchor_name/summary
msgid "Go function to create sanitized anchor names"
msgstr "安全なアンカー名を作成するための Go 関数"

#. leap/golang-github-shurcool-sanitized_anchor_name/description
#. tumbleweed/golang-github-shurcool-sanitized_anchor_name/description
msgid ""
"Package sanitized_anchor_name provides a func to create sanitized anchor "
"names. Its logic can be reused by multiple packages to create interoperable "
"anchor names and links to those anchors. At this time, it does not try to "
"ensure that generated anchor names are unique, that responsibility falls on "
"the caller."
msgstr ""
"sanitized_anchor_name パッケージは、安全なアンカー名を作成するための関数を提"
"供します。このロジックは様々なパッケージで再利用することができるため、相互運"
"用性のあるアンカー名の作成や、これらのアンカーに対するリンクを行なうことがで"
"きます。なお、現時点では生成されたアンカー名が唯一のものであるかどうかを確認"
"しません。このような機能は呼び出し側で実装してください。"

#. leap/golang-gopkgin-check/summary
#. tumbleweed/golang-gopkgin-check/summary
msgid "Rich testing framework for the Go language"
msgstr "Go 言語向けリッチテストフレームワーク"

#. leap/golang-gopkgin-check/description
#. tumbleweed/golang-gopkgin-check/description
msgid ""
"The Go language provides an internal testing library, named \"testing\", "
"which is relatively slim due to the fact that the standard library "
"correctness by itself is verified using it. The gocheck package, on the "
"other hand, expects the standard library from Go to be working correctly, "
"and builds on it to offer a richer testing framework for libraries and "
"applications to use."
msgstr ""
"Go 言語には \"testing\" と呼ばれる内部テストライブラリが用意されています。こ"
"れは標準ライブラリ自身の正当性をチェックするだけの仕組みであることから、比較"
"的スリムなものになっています。一方の gocheck パッケージでは、 Go 言語が提供す"
"る標準ライブラリが正しく動作する前提で作られていて、各種のライブラリやアプリ"
"ケーションをより便利にテストできる仕組みを構築しています。"

#. leap/golang-org-x-sys/summary
#. tumbleweed/golang-org-x-sys/summary
msgid "Go packages for low-level interaction with the operating system"
msgstr ""
"オペレーティングシステムとの間で低レベルなやりとりを行なうための Go パッケー"
"ジ"

#. leap/golang-org-x-sys/description
#. tumbleweed/golang-org-x-sys/description
msgid ""
"This repository holds supplemental Go packages for low-level interactions "
"with the operating system."
msgstr ""
"このリポジトリは、オペレーティングシステムとの間で低レベルなやりとりを行なう"
"ための Go パッケージを提供しています。"

#. leap/golang-packaging/summary
#. tumbleweed/golang-packaging/summary
msgid "A toolchain to help packaging golang"
msgstr "golang パッケージング支援ツールチェイン"

#. leap/golang-packaging/description
#. tumbleweed/golang-packaging/description
msgid "A toolchain to help packaging golang, written in bash."
msgstr ""
"bash で記述された、 golang をパッケージングするための支援用ツールチェインで"
"す。"

#. tumbleweed/golang-github-nsf-gocode/emacs-completion-golang/summary
msgid "Golang autocompletion files for Emacs"
msgstr "Emacs 向け Golang オートコンプリートファイル"

#. tumbleweed/golang-github-nsf-gocode/emacs-completion-golang/description
msgid ""
"Emacs autocompletion for the Go programming language.\n"
"\n"
"Add the following to your emacs-config:\n"
"\n"
"```lisp (require 'go-autocomplete)\t; load go autocompletion backend ```"
msgstr ""
"Go プログラミング言語向け Emacs オートコンプリート機能です。\n"
"\n"
"下記の内容を emacs-config 内に追加してお使いください:\n"
"\n"
"```lisp (require 'go-autocomplete); load go autocompletion backend ```"

#. tumbleweed/golang-org-x-tools/go-tools/summary
#. tumbleweed/golang-org-x-tools/summary
msgid "Additional toolsgraphy libraries"
msgstr "追加 toolsgraphy ライブラリ"

#. tumbleweed/golang-org-x-tools/go-tools/description
#. tumbleweed/golang-org-x-tools/description
msgid ""
"This package contains additional toolsgraphy libraries that are developed by "
"the Go team but outside of the main source tree."
msgstr ""
"このパッケージには、 Go チームが開発しているものの、メインのソースツリー内に"
"は取り込まれていない、追加の toolsgraphy ライブラリが含まれています。"

#. tumbleweed/golang-github-nsf-gocode/gocode/summary
#. tumbleweed/golang-github-nsf-gocode/summary
msgid "An autocompletion daemon for the Go programming language"
msgstr "Go プログラミング言語向けオートコンプリートデーモン"

#. tumbleweed/golang-github-nsf-gocode/gocode/description
#. tumbleweed/golang-github-nsf-gocode/description
msgid ""
"Gocode is a helper tool which is intended to be integrated with your source "
"code editor such as vim or emacs. It uses a client-server architecture for "
"caching purposes (hence \"daemon\") and provides context-sensitive "
"autocompletion."
msgstr ""
"Gocode は、 vim や emacs などのようなソースコードエディタに統合されることを目"
"的とした、ヘルパーツールです。キャッシュを目的としたクライアント-サーバ型の仕"
"組み (そのため \"デーモン\" と呼ばれます) により、文脈依存のオートコンプリー"
"ト機能を提供します。"

#. tumbleweed/golang-github-kr-pretty/summary
msgid "Pretty printing for Go values"
msgstr "Go の値の見やすい表示"

#. tumbleweed/golang-github-kr-pretty/description
msgid ""
"Package pretty provides pretty-printing for go values. This is useful during "
"debugging, to avoid wrapping long output lines in the terminal. It provides "
"a function, Formatter, that can be used with any function that accepts a "
"format string. This package also provides a convenience wrapper for each "
"function in package fmt that takes a format string."
msgstr ""
"pretty パッケージは Go における値を見やすく表示するための仕組みを提供します。"
"デバッグ目的で使用すると、端末側で長い行が勝手に改行されたりする問題を避ける"
"ことができます。このほか、 Formatter と呼ばれる関数も提供しています。これは書"
"式文字列を受け付けて表示することができます。このパッケージには、書式文字列を"
"受け付ける fmt パッケージ内の各関数に対する、便利なラッパーも用意されていま"
"す。"

#. tumbleweed/golang-github-naoina-go-stringutil/summary
msgid "String functions for Golang"
msgstr "Golang 向け文字列関数"

#. tumbleweed/golang-github-naoina-go-stringutil/description
msgid "This library contains various string manipulation functions for Golang."
msgstr "このライブラリには、 Golang で文字列を操作するためのさまざまな関数が含まれています。"

#. tumbleweed/golang-github-rogpeppe-godef/summary
msgid "Find symbol information in Go source"
msgstr "Go ソース内でのシンボル情報の検索"

#. tumbleweed/golang-github-rogpeppe-godef/description
msgid ""
"Godef, given an expression or a location in a source file, prints the "
"location of the definition of the symbol referred to."
msgstr ""
"Godef は、表現またはソースファイル内の場所を指定することで、シンボルが参照す"
"る定義の場所を表示することができます。"

#. tumbleweed/golang-googlecode-mango-doc/summary
#. tumbleweed/golang-googlecode-mango-doc/mango-doc/summary
msgid "Automatically create man pages from Go packages"
msgstr "Go パッケージからの自動的なマニュアルページ生成"

#. tumbleweed/golang-googlecode-mango-doc/description
#. tumbleweed/golang-googlecode-mango-doc/mango-doc/description
msgid "Create a man page from a Go package's source file's documentation."
msgstr ""
"Go パッケージのソースファイル内にあるドキュメンテーションからマニュアルページ"
"を作成します。"

#. tumbleweed/golang-org-x-crypto/summary
msgid "Go supplementary cryptography libraries"
msgstr "Go 補助暗号化ライブラリ"

#. tumbleweed/golang-org-x-crypto/description
msgid "Go supplementary cryptography libraries."
msgstr "Go 補助暗号化ライブラリです。"

#. tumbleweed/golang-org-x-net-context/summary
msgid "Context defines the Context type"
msgstr "コンテキストタイプを定義するコンテキスト"

#. tumbleweed/golang-org-x-net-context/description
msgid ""
"Package context defines the Context type, which carries deadlines, "
"cancelation signals, and other request-scoped values across API boundaries "
"and between processes."
msgstr ""
"context パッケージはコンテキストタイプを定義するもので、デッドラインやキャン"
"セルシグナルのほか、リクエストスコープの値を API 境界およびプロセス間を跨いで"
"伝送する仕組みを提供します。"

#. tumbleweed/golang-org-x-net-html/summary
msgid "Package html implements an HTML5-compliant tokenizer and parser"
msgstr "html パッケージ - HTML5 準拠のトークナイザおよびパーサの実装"

#. tumbleweed/golang-org-x-net-html/description
msgid "Package html implements an HTML5-compliant tokenizer and parser."
msgstr "html パッケージは、 HTML5 準拠のトークナイザおよびパーサを実装します。"

#. tumbleweed/golang-org-x-net-websocket/summary
msgid "Websocket implements a client and server for the WebSocket protocol"
msgstr "WebSocket - WebSocket プロトコルのクライアントとサーバの実装"

#. tumbleweed/golang-org-x-net-websocket/description
msgid ""
"Package websocket implements a client and server for the WebSocket protocol "
"as specified in RFC 6455."
msgstr ""
"websocket パッケージは、 RFC 6455 で規定されている WebSocket プロトコルのう"
"ち、クライアントとサーバを実装しています。"

#. tumbleweed/golang-github-nsf-gocode/vim-completion-golang/summary
msgid "Golang autocompletion files for Vim"
msgstr "Vim 向け Golang オートコンプリートファイル"

#. tumbleweed/golang-github-nsf-gocode/vim-completion-golang/description
msgid "Vim autocompletion for the Go programming language."
msgstr "Go プログラミング言語向けの Vim オートコンプリートです。"

#~ msgid "Project based build tool for Go"
#~ msgstr "Go 向けのプロジェクトベースのビルドツール"

#~ msgid ""
#~ "gb is a proof of concept replacement build tool for the Go programming "
#~ "language."
#~ msgstr ""
#~ "gb は、 Go プログラミング言語向けのビルドツールの代替コンセプトを具現化し"
#~ "たものです。"

#~ msgid "Simple error handling primitives"
#~ msgstr "シンプルなエラー処理プリミティブ"

#~ msgid "Package errors provides simple error handling primitives."
#~ msgstr "Package errors は、シンプルなエラー処理プリミティブを提供します。"

#~ msgid "Go vendor tool that works with the standard vendor file"
#~ msgstr "標準ベンダーファイルで作業を行なうための Go ベンダーツール"

#~ msgid "Go vendor tool that works with the standard vendor file."
#~ msgstr "標準ベンダーファイルを扱うための Go ベンダーツールです。"

#~ msgid "docker-proxy binary"
#~ msgstr "docket-proxy バイナリ"

#~ msgid "Another tool to build go projects"
#~ msgstr "go プロジェクトを構築するためのもう 1 つのツール"

#~ msgid ""
#~ "Another tool to build go projects, both pure and cgo. Special emphasis on "
#~ "multi-package projects with inter-dependencies."
#~ msgstr ""
#~ "pure および cgo の両方の go プロジェクトに対応した、もう 1 つの構築ツール"
#~ "です。複数のパッケージオブジェクトが相互に依存するような場合に最適な仕組み"
#~ "です。"

#~ msgid "Binary parsing/printing for Go"
#~ msgstr "Go 言語向けバイナリ処理／表示"

#~ msgid "Binary parsing and printing for the Go programming language."
#~ msgstr "Go プログラミング言語向けのバイナリ処理および表示プログラムです。"

#~ msgid "Go bindings for SDL"
#~ msgstr "SDL 向け Go バインディング"

#~ msgid "SDL bindings for the Go Programming Language."
#~ msgstr "Go プログラミング言語向け SDL バインディングです。"

#~ msgid "Source codes for package golang-github-banthar-go-sdl"
#~ msgstr "golang-github-banthar-go-sdl パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-banthar-go-"
#~ "sdl."
#~ msgstr ""
#~ "このパッケージには、 golang-github-banthar-go-sdl パッケージ向けのソース"
#~ "コードが含まれています。"

#~ msgid "Asserts to Go testing"
#~ msgstr "Go テスト向けアサート処理"

#~ msgid "Assertions for Go tests."
#~ msgstr "Go テスト向けアサーションです。"

#~ msgid "Creation and verification of signed authentication cookies"
#~ msgstr "署名付き認証 Cookie の作成と検証"

#~ msgid ""
#~ "Package authcookie implements the creation and verification of signed "
#~ "authentication cookies."
#~ msgstr ""
#~ "authcookie パッケージは、署名付き認証 Cookie の作成と検証を実装します。"

#~ msgid "Falcore is a filter pipiline based HTTP server library"
#~ msgstr "Falcore - フィルタパイプラインベースの HTTP サーバライブラリ"

#~ msgid ""
#~ "Falcore is a framework for constructing high performance, modular HTTP "
#~ "servers in Golang. Falcore is a filter pipeline based HTTP server "
#~ "library. You can build arbitrarily complicated HTTP services by chaining "
#~ "just a few simple components"
#~ msgstr ""
#~ "Falcore は高性能なモジュール型 HTTP サーバを、 Go 言語で構築するためのフ"
#~ "レームワークです。 Falcore はフィルタパイプラインベースの HTTP サーバライ"
#~ "ブラリです。いくつかのシンプルなコンポーネントをつなぎ合わせるだけで、任意"
#~ "の複雑な HTTP サービスを構築することができます"

#~ msgid "Go support for Protocol Buffers - Google's data interchange format"
#~ msgstr ""
#~ "Protocol Buffers (Google のデータ交換フォーマット) 向け Go 言語サポート"

#~ msgid ""
#~ "This package provides Go support, in the form of a library and protocol "
#~ "compiler plugin, for Google's protocol buffers. (RPC is not supported.)"
#~ msgstr ""
#~ "このパッケージは、ライブラリやプロトコルコンパイラのプラグインの形式を取"
#~ "る、 Google の protocol buffers 向けの Go 言語サポートです (RPC には未対応"
#~ "です)"

#~ msgid "A simple framework to write webapps in Go"
#~ msgstr "Go 内で Web アプリを記述するためのシンプルなフレームワーク"

#~ msgid ""
#~ "Web.go is the simplest way to write web applications in the Go "
#~ "programming language. It's ideal for writing simple, performant backend "
#~ "web services."
#~ msgstr ""
#~ "Web.go は Go プログラミング言語で Web アプリケーションを作成するための、"
#~ "もっともシンプルな方法です。シンプルで高性能なバックエンドの Web サービス"
#~ "を作成するにあたって、実用的な仕組みを提供します。"

#~ msgid "Source codes for package golang-github-hoisie-web"
#~ msgstr "golang-github-hoisie-web パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-hoisie-web."
#~ msgstr ""
#~ "このパッケージには、 golang-github-hoisie-web パッケージ向けのソースコード"
#~ "が含まれています。"

#~ msgid "A Go package that reports processor topology"
#~ msgstr "プロセッサのトポロジを報告する Go パッケージ"

#~ msgid ""
#~ "The cpu package reports processor topology information. Note that the "
#~ "term package refers to a physical processor and system refers to multiple "
#~ "packages. Also, a processor's hardware capability may differ from its "
#~ "configuration."
#~ msgstr ""
#~ "cpu パッケージは、プロセッサのトポロジ情報を報告します。なお、 term パッ"
#~ "ケージは物理プロセッサを参照するほか、 system は複数のパッケージを参照しま"
#~ "す。また、プロセッサのハードウエア機能は、設定によって異なることがありま"
#~ "す。"

#~ msgid "Go bindings for GTK"
#~ msgstr "GTK 向け Go バインディング"

#~ msgid "GTK bindingins for the Go programming language."
#~ msgstr "Go プログラミング言語向けの GTK バインディングです。"

#~ msgid "Source codes for package golang-github-mattn-go-gtk"
#~ msgstr "golang-github-mattn-go-gtk パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-mattn-go-gtk."
#~ msgstr ""
#~ "このパッケージには、 golang-github-mattn-go-gtk パッケージ向けのソースコー"
#~ "ドが含まれています。"

#~ msgid "Left-Leaning Red-Black balanced binary search tree"
#~ msgstr "左寄せ赤黒バランス木バイナリ検索ツリー"

#~ msgid ""
#~ "GoLLRB is a Left-Leaning Red-Black (LLRB) implementation of 2-3 balanced "
#~ "binary search trees in Google Go."
#~ msgstr ""
#~ "GoLLRB は Google Go で実装された左寄せの 2-3 バランス型赤黒木 (LLRB) で"
#~ "す。"

#~ msgid "MySQL client library written completely in Go"
#~ msgstr "全てを Go 言語で作成した MySQL クライアントライブラリ"

#~ msgid ""
#~ "The most complete and stable MySQL client library written completely in "
#~ "Go. The aim of this project is to provide a library with a high level of "
#~ "usability, good internal error handling and to emulate similar libraries "
#~ "available for other languages to provide an easy migration of MySQL based "
#~ "systems into the Go language."
#~ msgstr ""
#~ "Go 言語で全ての機能を記述している、もっとも完全で安定した MySQL クライアン"
#~ "トライブラリです。このプロジェクトは、高レベルな利用性と適切な内部エラー処"
#~ "理を提供し、他の言語向けに提供されている類似ライブラリを疑似することで、 "
#~ "MySQL ベースのシステムを容易に Go 言語に移植することができるようなものを目"
#~ "指しています。"

#~ msgid "Google APIs Client Library for Go"
#~ msgstr "Go 向け Google API クライアントライブラリ"

#~ msgid "Google APIs Client Library for Go."
#~ msgstr "Go 向け Google API クライアントライブラリです。"

#~ msgid "Source codes for package golang-google-golangorg-api"
#~ msgstr "golang-google-golangorg-api パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-google-golangorg-"
#~ "api."
#~ msgstr ""
#~ "このパッケージには、 golang-google-golangorg-api パッケージ向けのソース"
#~ "コードが含まれています。"

#~ msgid "Go App Engine for Managed VMs"
#~ msgstr "マネージド VM 向け Go App エンジン"

#~ msgid ""
#~ "This package supports the Go runtime for Managed VMs on App Engine. It "
#~ "provides APIs for interacting with App Engine services."
#~ msgstr ""
#~ "このパッケージは、 App エンジン内のマネージド VM 向けの Go ランタイムを提"
#~ "供します。 App エンジンサービスを利用して処理を行なうための API を提供しま"
#~ "す。"

#~ msgid "Source codes for package golang-google-golangorg-appengine"
#~ msgstr "golang-google-golangorg-appengine パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-google-golangorg-"
#~ "appengine."
#~ msgstr ""
#~ "このパッケージには、 golang-google-golangorg-appengine パッケージ向けの"
#~ "ソースコードが含まれています。"

#~ msgid "Go packages for Google Cloud Platform services"
#~ msgstr "Google Cloud プラットフォームサービス向け Go パッケージ"

#~ msgid ""
#~ "Go packages for Google Cloud Platform services. Supported APIs include:\n"
#~ "\n"
#~ "Google Cloud Datastore Google Cloud Storage Google Cloud Pub/Sub Google "
#~ "Cloud Container Engine"
#~ msgstr ""
#~ "Google Cloud プラットフォームサービス向けの Go パッケージです。対応する "
#~ "API は下記のとおりです:\n"
#~ "\n"
#~ "Google Cloud Datastore Google Cloud Storage Google Cloud Pub/Sub Google "
#~ "Cloud Container Engine"

#~ msgid "Source codes for package golang-google-golangorg-cloud"
#~ msgstr "golang-google-golangorg-cloud パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-google-golangorg-"
#~ "cloud."
#~ msgstr ""
#~ "このパッケージには、 golang-google-golangorg-cloud パッケージ向けのソース"
#~ "コードが含まれています。"

#~ msgid "Simple CouchDB API for Google Go"
#~ msgstr "Google Go 向けシンプル CouchDB API"

#~ msgid ""
#~ "Couch-go is a simple CouchDB (0.9+) API for the Google Go language. It "
#~ "supports basic operations on documents."
#~ msgstr ""
#~ "Couch-go は Google Go 言語向けのシンプルな CouchDB (0.9+) API です。ドキュ"
#~ "メント上の基本的な操作に対応しています。"

#~ msgid "Configuration file parser for the Go Programming Language"
#~ msgstr "Go プログラミング言語向け設定ファイルパーサ"

#~ msgid "A simple configuration file parser for the Go programming language."
#~ msgstr "Go プログラミング言語向けのシンプルな設定ファイルパーサーです。"

#~ msgid "Trivial SQLite binding for Go"
#~ msgstr "Go 向け SQLite バインディング"

#~ msgid "SQLite binding for the Go progamming language."
#~ msgstr "Go プログラミング言語向けの SQLite バインディングです。"

#~ msgid "Source codes for package golang-googlecode-gosqlite"
#~ msgstr "golang-googlecode-gosqlite パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-googlecode-gosqlite."
#~ msgstr ""
#~ "このパッケージには、 golang-googlecode-gosqlite パッケージ向けのソースコー"
#~ "ドが含まれています。"

#~ msgid "A replacement logging package for Go language"
#~ msgstr "Go 言語向け置換型ログ記録パッケージ"

#~ msgid ""
#~ "A log4java inspired logging package.\n"
#~ "\n"
#~ "Usage: import l4g \"log4go.googlecode.com/svn/stable\"\n"
#~ "\n"
#~ "- File logging with rotation (size, linecount, daily) and custom output "
#~ "formats\n"
#~ "- Console logging\n"
#~ "- Network logging via JSON and TCP/UDP\n"
#~ "- XML Logger\n"
#~ "- Closure logging for defered parameter expansion\n"
#~ "- Automatic log filtering based on log levels on a per-output basis\n"
#~ "- XML configuration available for no-compile changes to logging\n"
#~ "- Wrapper functions and global loggers for easy configuration and rapid "
#~ "deployment\n"
#~ "- Drop-in compatibility with code using the standard log package"
#~ msgstr ""
#~ "log4java にヒントを得て作られたログ記録パッケージです。\n"
#~ "\n"
#~ "使用法: import l4g \"log4go.googlecode.com/svn/stable\"\n"
#~ "\n"
#~ "- ローテーション (サイズ, 行数, 日付) 機能付きのファイルログ出力、および出"
#~ "力形式のカスタマイズ\n"
#~ "- コンソールへのログ出力\n"
#~ "- JSON および TCP/UDP を利用したネットワークログ記録\n"
#~ "- XML ログ出力\n"
#~ "- 遅延パラメータ展開のためのクロージャログ記録\n"
#~ "- 出力ごとにログレベルを設定することによる、自動的なログフィルタ機能\n"
#~ "- ログを記録するにあたってコンパイルし直す必要のない XML 形式の設定\n"
#~ "- 簡単な設定および素早い配置を目的とした、ラッパー関数やグローバルロガー\n"
#~ "- 標準 log パッケージを利用するコードに対して、即時に置き換えのできる互換"
#~ "性"

#~ msgid "Source codes for package golang-googlecode-log4go"
#~ msgstr "golang-googlecode-log4go パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-googlecode-log4go."
#~ msgstr ""
#~ "このパッケージには、 golang-googlecode-log4go パッケージ向けのソースコード"
#~ "が含まれています。"

#~ msgid "Source codes for package golang-googlecode-mango-doc"
#~ msgstr "golang-googlecode-mango-doc パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-googlecode-mango-"
#~ "doc."
#~ msgstr ""
#~ "このパッケージには、 golang-googlecode-mango-doc パッケージ向けのソース"
#~ "コードが含まれています。"

#~ msgid "Source codes for package golang-org-x-crypto"
#~ msgstr "golang-org-x-crypto パッケージ向けソースコード"

#~ msgid "This package provides source codes for package golang-org-x-crypto."
#~ msgstr ""
#~ "このパッケージには、 golang-org-x-crypto パッケージ向けのソースコードが含"
#~ "まれています。"

#~ msgid "Go supplementary image libraries"
#~ msgstr "Go 補助イメージライブラリ"

#~ msgid "This repository holds supplementary Go image libraries."
#~ msgstr "このリポジトリには、 Go 補助イメージライブラリが用意されています。"

#~ msgid "Additional go.networking libraries"
#~ msgstr "追加 go.networking ライブラリ"

#~ msgid ""
#~ "This package contains additional go.network libraries such as the "
#~ "websocket and SPDY protocols that are developed by the Go team but "
#~ "outside of the main source tree."
#~ msgstr ""
#~ "このパッケージには、 WebSocket や SPDY プロトコルなど、 Go チームが開発し"
#~ "たものでありながら、メインのソースツリー内には取り込まれていない、追加の "
#~ "go.network ライブラリが含まれています。"

#~ msgid "Source codes for package golang-org-x-net"
#~ msgstr "golang-org-x-net パッケージ向けソースコード"

#~ msgid "This package provides source codes for package golang-org-x-net."
#~ msgstr ""
#~ "このパッケージには、 golang-org-x-net パッケージ向けのソースコードが含まれ"
#~ "ています。"

#~ msgid "OAuth 2.0 for Go clients"
#~ msgstr "Go クライアント向け OAuth 2.0"

#~ msgid "An OAuth 2.0 library for the Go programming language."
#~ msgstr "Go プログラミング言語向け OAuth 2.0 ライブラリです。"

#~ msgid "Source codes for package golang-org-x-oauth2"
#~ msgstr "golang-org-x-oauth2 パッケージ向けソースコード"

#~ msgid "This package provides source codes for package golang-org-x-oauth2."
#~ msgstr ""
#~ "このパッケージには、 golang-org-x-oauth2 パッケージ向けのソースコードが含"
#~ "まれています。"

#~ msgid "Go text processing support"
#~ msgstr "Go テキスト処理サポート"

#~ msgid ""
#~ "This repository holds supplementary Go libraries for text processing, "
#~ "many involving Unicode."
#~ msgstr ""
#~ "このリポジトリは、 Unicode を多く含んだテキスト処理用の補助 Go ライブラリ"
#~ "を提供しています。"

#~ msgid "Source codes for package golang-org-x-text"
#~ msgstr "golang-org-x-text パッケージ向けソースコード"

#~ msgid "This package provides source codes for package golang-org-x-text."
#~ msgstr ""
#~ "このパッケージには、 golang-org-x-text パッケージ向けのソースコードが含ま"
#~ "れています。"

#~ msgid "Source codes for package golang-org-x-tools"
#~ msgstr "golang-org-x-tools パッケージ向けソースコード"

#~ msgid "This package provides source codes for package golang-org-x-tools."
#~ msgstr ""
#~ "このパッケージには、 golang-org-x-tools パッケージ向けのソースコードが含ま"
#~ "れています。"

#~ msgid "General purpose registry for global request variables"
#~ msgstr "グローバルリクエスト値向け汎用レジストリ"

#~ msgid ""
#~ "The context package stores values shared during a request lifetime.\n"
#~ "\n"
#~ "For example, a router can set variables extracted from the URL and later "
#~ "application handlers can access those values, or it can be used to store "
#~ "sessions values to be saved at the end of a request."
#~ msgstr ""
#~ "このコンテキストパッケージは、リクエストの生存期間内で共有される値を保存す"
#~ "ることができます。\n"
#~ "\n"
#~ "たとえばルータでは URL から抽出した値を設定し、後続のアプリケーションハン"
#~ "ドラでそれらの値にアクセスしたり、リクエストの終わりで保存されるセッション"
#~ "値を設定したりすることができます。"

#~ msgid "A WebSocket implementation for Go"
#~ msgstr "Go 言語向け WebSocket 実装"

#~ msgid ""
#~ "Gorilla WebSocket is a Go implementation of the WebSocket protocol.\n"
#~ "\n"
#~ "It has some features that go-net doesn't have."
#~ msgstr ""
#~ "Gorilla WebSocket は WebSocket プロトコルの Go 言語実装です。\n"
#~ "\n"
#~ "go-net が持っていないような機能もいくつか実装されています。"

#~ msgid "A simple, low-level http library for Go"
#~ msgstr "Go 言語向けシンプル／低レベル http ライブラリ"

#~ msgid ""
#~ "httplib.go is a simple extension of Go's http client that provides keep-"
#~ "alive connections and generic requests. This is a small usage example:\n"
#~ "\n"
#~ "    //get the google home page     c := new(httplib.Client)     resp, "
#~ "err := c.Request (\"http://google.com\", \"GET\", nil, \"\")     data := "
#~ "ioutil.ReadAll( resp.Body )     println(string(data))"
#~ msgstr ""
#~ "httplib.go は Go 言語向けのシンプルな http クライアント拡張で、キープアラ"
#~ "イブ接続や汎用的なクエストに対応しています。たとえば下記のようにシンプルに"
#~ "作ることができます:\n"
#~ "\n"
#~ "    //google ホームページの取得     c := new(httplib.Client)     resp, "
#~ "err := c.Request (\"http://google.com\", \"GET\", nil, \"\")     data := "
#~ "ioutil.ReadAll( resp.Body )     println(string(data))"

#~ msgid "The mustache template language in Go"
#~ msgstr "Go 向け mustache テンプレート言語"

#~ msgid ""
#~ "mustache.go is an implementation of the mustache template language in Go. "
#~ "It is better suited for website templates than Go's native pkg/template. "
#~ "mustache.go is fast, it parses templates efficiently and stores them in a "
#~ "tree-like structure which allows for fast execution."
#~ msgstr ""
#~ "mustache.go は Go 言語向けの mustache テンプレート言語の実装です。 Go のネ"
#~ "イティブな pkg/template よりも Web サイトのテンプレートとしては適切な仕組"
#~ "みで、高速で効率的に動作するほか、高速な実装を目的としたツリー様構造で保存"
#~ "を行ないます。"

#~ msgid "A port of the Freetype font engine to the Go programming language"
#~ msgstr "Go プログラミング言語に対する Freetype フォントエンジンの移植"

#~ msgid ""
#~ "This is a port of the Freetype font rasterizer (www.freetype.org) to the "
#~ "Go programming language."
#~ msgstr ""
#~ "これは Freetype フォントラスタライザ (www.freetype.org) の Go プログラミン"
#~ "グ言語への移植版です。"

#~ msgid "Source codes for package golang-bitbucket-taruti-bigendian"
#~ msgstr "golang-bitbucket-taruti-bigendian パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-bitbucket-taruti-"
#~ "bigendian."
#~ msgstr ""
#~ "このパッケージには、 golang-bitbucket-taruti-bigendian パッケージ向けの"
#~ "ソースコードが含まれています。"

#~ msgid "Source codes for package golang-github-cpuguy83-go-md2man"
#~ msgstr "golang-github-cpuguy83-go-md2man パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-cpuguy83-go-"
#~ "md2man."
#~ msgstr ""
#~ "このパッケージには、 golang-github-cpuguy83-go-md2man パッケージ向けのソー"
#~ "スコードが含まれています。"

#~ msgid "Source codes for package golang-github-dchest-authcookie"
#~ msgstr "golang-github-dchest-authcookie パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-dchest-"
#~ "authcookie."
#~ msgstr ""
#~ "このパッケージには、 golang-github-dchest-authcookie パッケージ向けのソー"
#~ "スコードが含まれています。"

#~ msgid "Source codes for package golang-github-exercism-cli"
#~ msgstr "golang-github-exercism-cli パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-exercism-cli."
#~ msgstr ""
#~ "このパッケージには、 golang-github-exercism-cli パッケージ向けのソースコー"
#~ "ドが含まれています。"

#~ msgid "Source codes for package golang-github-fitstar-falcore"
#~ msgstr "golang-github-fitstar-falcore パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-fitstar-"
#~ "falcore."
#~ msgstr ""
#~ "このパッケージには、 golang-github-fitstar-falcore パッケージ向けのソース"
#~ "コードが含まれています。"

#~ msgid ""
#~ "This is an efficient pure Go implementation of leveled logs in the manner "
#~ "of the open source C++ package google-glog."
#~ msgstr ""
#~ "これは、オープンソースの C++ パッケージ google-glog のやり方を利用した、レ"
#~ "ベル型ログ機能の効率的な純粋 Go 言語実装です。"

#~ msgid "Source codes for package golang-github-golang-glog"
#~ msgstr "golang-github-golang-glog パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-golang-glog."
#~ msgstr ""
#~ "このパッケージには、 golang-github-golang-glog パッケージ向けのソースコー"
#~ "ドが含まれています。"

#~ msgid "Source codes for package golang-github-gorilla-context"
#~ msgstr "golang-github-gorilla-context パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-gorilla-"
#~ "context."
#~ msgstr ""
#~ "このパッケージには、 golang-github-gorilla-context パッケージ向けのソース"
#~ "コードが含まれています。"

#~ msgid "Source codes for package golang-github-hoisie-httplib"
#~ msgstr "golang-github-hoisie-httplib パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-hoisie-"
#~ "httplib."
#~ msgstr ""
#~ "このパッケージには、 golang-github-hoisie-httplib パッケージ向けのソース"
#~ "コードが含まれています。"

#~ msgid "Source codes for package golang-github-hoisie-mustache"
#~ msgstr "golang-github-hoisie-mustache パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-hoisie-"
#~ "mustache."
#~ msgstr ""
#~ "このパッケージには、 golang-github-hoisie-mustache パッケージ向けのソース"
#~ "コードが含まれています。"

#~ msgid ""
#~ "The cpu package reports processor topology information.\n"
#~ "\n"
#~ "Note that the term package refers to a physical processor and system "
#~ "refers to multiple packages. Also, a processor's hardware capability may "
#~ "differ from its configuration."
#~ msgstr ""
#~ "cpu パッケージは、プロセッサのトポロジ情報を報告します。\n"
#~ "\n"
#~ "なお、 term パッケージは物理プロセッサを参照するほか、 system は複数のパッ"
#~ "ケージを参照します。また、プロセッサのハードウエア機能は、設定によって異な"
#~ "ることがあります。"

#~ msgid "Source codes for package golang-github-jpoirier-cpu"
#~ msgstr "golang-github-jpoirier-cpu パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-jpoirier-cpu."
#~ msgstr ""
#~ "このパッケージには、 golang-github-jpoirier-cpu パッケージ向けのソースコー"
#~ "ドが含まれています。"

#~ msgid "A Go package for using unix pseudo-terminals"
#~ msgstr "unix の疑似端末を使用するための Go パッケージ"

#~ msgid "Source codes for package golang-github-kr-pty"
#~ msgstr "golang-github-kr-pty パッケージ向けソースコード"

#~ msgid "This package provides source codes for package golang-github-kr-pty."
#~ msgstr ""
#~ "このパッケージには、 golang-github-kr-pty パッケージ向けのソースコードが含"
#~ "まれています。"

#~ msgid "Source codes for package golang-github-kr-text"
#~ msgstr "golang-github-kr-text パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-kr-text."
#~ msgstr ""
#~ "このパッケージには、 golang-github-kr-text パッケージ向けのソースコードが"
#~ "含まれています。"

#~ msgid "Source codes for package golang-github-petar-gollrb"
#~ msgstr "golang-github-petar-gollrb パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-petar-gollrb."
#~ msgstr ""
#~ "このパッケージには、 golang-github-petar-gollrb パッケージ向けのソースコー"
#~ "ドが含まれています。"

#~ msgid "Source codes for package golang-github-philio-gomysql"
#~ msgstr "golang-github-philio-gomysql パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-philio-"
#~ "gomysql."
#~ msgstr ""
#~ "このパッケージには、 golang-github-philio-gomysql パッケージ向けのソース"
#~ "コードが含まれています。"

#~ msgid ""
#~ "Blackfriday is a Markdown processor implemented in Go. It is paranoid "
#~ "about its input (so you can safely feed it user-supplied data), it is "
#~ "fast, it supports common extensions (tables, smart punctuation "
#~ "substitutions, etc.), and it is safe for all utf-8 (unicode) input.\n"
#~ "\n"
#~ "HTML output is currently supported, along with Smartypants extensions. An "
#~ "experimental LaTeX output engine is also included."
#~ msgstr ""
#~ "Blackfriday は Go 言語で実装されたマークダウンプロセッサです。入力データに"
#~ "関しては、偏執的とも呼べるほど厳格にチェックを行ないます (そのため、ユーザ"
#~ "が入力したデータをそのまま与えることが可能です) が、高速で汎用的な拡張 "
#~ "(テーブル、句読点に対する賢い置換機能など) にも対応しています。また、全て"
#~ "の UTF-8 (Unicode) 入力に対して安全です。\n"
#~ "\n"
#~ "Smartypants 拡張とともに HTML 出力にも対応しています。実験的な LaTeX 出力"
#~ "エンジンも含まれています。"

#~ msgid "Source codes for package golang-github-russross-blackfriday"
#~ msgstr "golang-github-russross-blackfriday パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-russross-"
#~ "blackfriday."
#~ msgstr ""
#~ "このパッケージには、 golang-github-russross-blackfriday パッケージ向けの"
#~ "ソースコードが含まれています。"

#~ msgid ""
#~ "Package sanitized_anchor_name provides a func to create sanitized anchor "
#~ "names.\n"
#~ "\n"
#~ "Its logic can be reused by multiple packages to create interoperable "
#~ "anchor names and links to those anchors.\n"
#~ "\n"
#~ "At this time, it does not try to ensure that generated anchor names are "
#~ "unique, that responsibility falls on the caller."
#~ msgstr ""
#~ "sanitized_anchor_name パッケージは、安全なアンカー名を作成するための関数を"
#~ "提供します。\n"
#~ "\n"
#~ "このロジックは様々なパッケージで再利用することができるため、相互運用性のあ"
#~ "るアンカー名の作成や、これらのアンカーに対するリンクを行なうことができま"
#~ "す。\n"
#~ "\n"
#~ "なお、現時点では生成されたアンカー名が唯一のものであるかどうかを確認しませ"
#~ "ん。このような機能は呼び出し側で実装してください。"

#~ msgid ""
#~ "Source codes for package golang-github-shurcool-sanitized_anchor_name"
#~ msgstr ""
#~ "golang-github-shurcool-sanitized_anchor_name パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-shurcool-"
#~ "sanitized_anchor_name."
#~ msgstr ""
#~ "このパッケージには、 golang-github-shurcool-sanitized_anchor_name パッケー"
#~ "ジ向けのソースコードが含まれています。"

#~ msgid "Source codes for package golang-googlecode-couch-go"
#~ msgstr "golang-googlecode-couch-go パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-googlecode-couch-go."
#~ msgstr ""
#~ "このパッケージには、 golang-googlecode-couch-go パッケージ向けのソースコー"
#~ "ドが含まれています。"

#~ msgid "Source codes for package golang-googlecode-goconf"
#~ msgstr "golang-googlecode-goconf パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-googlecode-goconf."
#~ msgstr ""
#~ "このパッケージには、 golang-googlecode-goconf パッケージ向けのソースコード"
#~ "が含まれています。"

#~ msgid ""
#~ "The Go language provides an internal testing library, named \"testing\", "
#~ "which is relatively slim due to the fact that the standard library "
#~ "correctness by itself is verified using it. The gocheck package, on the "
#~ "other hand, expects the standard library from Go to be working correctly, "
#~ "and builds on it to offer a richer testing framework for libraries and "
#~ "applications to use.\n"
#~ "\n"
#~ "It includes features such as:\n"
#~ "\n"
#~ " - Helpful error reporting to aid on figuring problems out (see below)  - "
#~ "Richer test helpers: assertions which interrupt the test immediately,  - "
#~ "deep multi-type comparisons, string matching, etc  - Suite-based grouping "
#~ "of tests  - Benchmarks integrated in the suite logic (with fixtures, "
#~ "etc)  - Fixtures: per suite and/or per test set up and tear down  - "
#~ "Management of temporary directories  - Panic-catching logic, with proper "
#~ "error reporting  - Proper counting of successes, failures, panics, missed "
#~ "tests, skips, etc  - Explicit test skipping  - Support for expected "
#~ "failures  - Verbosity flag which disables output caching  - Fully tested "
#~ "(yes, it manages to test itself reliably! :-)"
#~ msgstr ""
#~ "Go 言語には \"testing\" と呼ばれる内部テストライブラリが用意されています。"
#~ "これは標準ライブラリ自身の正当性をチェックするだけの仕組みであることから、"
#~ "比較的スリムなものになっています。一方の gocheck パッケージでは、 Go 言語"
#~ "が提供する標準ライブラリが正しく動作する前提で作られていて、各種のライブラ"
#~ "リやアプリケーションをより便利にテストできる仕組みを構築しています。\n"
#~ "\n"
#~ "具体的には、下記のような機能が用意されています:\n"
#~ "\n"
#~ " - 問題を見つけ出すための便利なエラーレポート機能 - よりリッチなテストヘル"
#~ "パー: テストを即時に停止させるようなアサーション機能,  - 多数の型に対応し"
#~ "た深い比較 (文字列比較など) - suite ベースのテストのグループ化 - suite "
#~ "logic (fixture など) 内に統合されたベンチマーク機能 - fixture: スイートま"
#~ "たはテストごとの設定および分解 - 一時ディレクトリの管理 - パニックのキャッ"
#~ "チロジック (適切なエラー報告機能付き) - 成功／失敗／パニック／未実施／ス"
#~ "キップなどのテスト数管理 - 明示的なテストスキップ - 期待する失敗のテスト "
#~ "- 出力キャッシュを無効化するための冗長フラグ - 完全テスト済み (テストを無"
#~ "駄なく実施できます！ :-)"

#~ msgid "Source codes for package golang-gopkgin-check"
#~ msgstr "golang-gopkgin-check パッケージ向けソースコード"

#~ msgid "This package provides source codes for package golang-gopkgin-check."
#~ msgstr ""
#~ "このパッケージには、 golang-gopkgin-check パッケージ向けのソースコードが含"
#~ "まれています。"

#~ msgid "Source codes for package golang-org-x-image"
#~ msgstr "golang-org-x-image パッケージ向けソースコード"

#~ msgid "This package provides source codes for package golang-org-x-image."
#~ msgstr ""
#~ "このパッケージには、 golang-org-x-image パッケージ向けのソースコードが含ま"
#~ "れています。"

#~ msgid "Source codes for package golang-org-x-sys"
#~ msgstr "golang-org-x-sys パッケージ向けソースコード"

#~ msgid "This package provides source codes for package golang-org-x-sys."
#~ msgstr ""
#~ "このパッケージには、 golang-org-x-sys パッケージ向けのソースコードが含まれ"
#~ "ています。"

#~ msgid "A toolchain to help packaging golang, written in ruby."
#~ msgstr "Ruby で記述された、 golang パッケージングの支援ツールチェインです。"

#~ msgid ""
#~ "An autocompletion daemon for the Go programming language. Gocode is a "
#~ "helper tool which is intended to be integraded with your source code "
#~ "editor, like vim and emacs. It provides several advanced capabilities, "
#~ "which currently includes context-sensitive autocompletion. It is called "
#~ "daemon, because it uses client / server architecture for caching "
#~ "purposes. In particular, it makes autocompletions very fast. Typical "
#~ "autocompletion time with warm cache is 30ms, which is barely noticeable."
#~ msgstr ""
#~ "Go プログラミング言語向けのオートコンプリートデーモンです。 Gocode は、 "
#~ "vim や emacs など、お使いのソースコードエディタと統合して使用するタイプの"
#~ "支援ツールです。文脈を自動判断してオートコンプリートを行なうなど、いくつか"
#~ "の高度な機能も搭載されています。なお、このツールはデーモンと呼ばれています"
#~ "が、これはキャッシュ機能を実現するために、クライアント／サーバ型のアーキテ"
#~ "クチャになっているためです。これにより、非常に高速なオートコンプリートを実"
#~ "現しています。キャッシュ内にデータが存在すれば一般に 30ms 程度で表示される"
#~ "ため、作業を邪魔するようなこともありません。"

#~ msgid "Source codes for package golang-github-bmizerany-assert"
#~ msgstr "golang-github-bmizerany-assert パッケージ向けソースコード"

#~ msgid ""
#~ "This package provides source codes for package golang-github-bmizerany-"
#~ "assert."
#~ msgstr ""
#~ "このパッケージには、 golang-github-bmizerany-assert パッケージ向けのソース"
#~ "コードが含まれています。"

#, fuzzy
#~ msgid ""
#~ "This package provides source codes for package golang-github-golang-"
#~ "protobuf."
#~ msgstr ""
#~ "このパッケージには、 X.Org フォントパッケージ作成／インストール向けのユー"
#~ "ティリティが含まれています。"
